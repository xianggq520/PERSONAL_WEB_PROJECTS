1. 内置的fs模块架构是什么样子的?

参考答案: 

	fs模块主要由下面几部分组成: 
	
		1) POSIX文件Wrapper,对应于操作系统的原生文件操作 
		2) 文件流 fs.createReadStream和fs.createWriteStream 
		3) 同步文件读写,fs.readFileSync和fs.writeFileSync 
		4) 异步文件读写, fs.readFile和fs.writeFile

2. 读写一个文件有多少种方法?

参考答案: 

总体来说有四种: 

	1) POSIX式低层读写 
	2) 流式读写 
	3) 同步文件读写 
	4) 异步文件读写

3. 怎么读取json配置文件?

参考答案: 

主要有两种方式，

	第一种是利用node内置的require('data.json')机制，直接得到js对象; 
	第二种是读入文件入内容，然后用JSON.parse(content)转换成js对象．
	
	二者的区别是require机制情况下，如果多个模块都加载了同一个json文件，
	那么其中一个改变了js对象，其它跟着改变，这是由node模块的缓存机制造成的，只有一个js模块对象; 
	第二种方式则可以随意改变加载后的js变量，而且各模块互不影响，因为他们都是独立的，是多个js对象.

4. fs.watch和fs.watchFile有什么区别，怎么应用?

参考答案: 

	二者主要用来监听文件变动．
	
	fs.watch利用操作系统原生机制来监听，可能不适用网络文件系统; 
	fs.watchFile则是定期检查文件状态变更，适用于网络文件系统，但是相比fs.watch有些慢，因为不是实时机制．